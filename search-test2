<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Căutare în articole cu evidențiere exactă</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        #results { margin-top: 20px; }
        .result { margin-bottom: 20px; border-bottom: 1px solid #ccc; padding-bottom: 10px; }
        .highlight { font-weight: bold; }
        #debug { margin-top: 20px; border: 1px solid #ccc; padding: 10px; white-space: pre-wrap; }
    </style>
</head>
<body>
    <h1>Căutare în articole cu evidențiere exactă</h1>
    
    <input type="text" id="searchInput" placeholder="Introduceți fraza de căutat">
    <button onclick="search()">Caută</button><br><br>

    <div id="results"></div>
    <div id="debug"></div>

    <script>
        let articles = [];
        let debugInfo = [];

        function log(message) {
            console.log(message);
            debugInfo.push(message);
            document.getElementById('debug').textContent = debugInfo.join('\n');
        }

        function normalizeText(text) {
            return decodeHtmlEntities(text)
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .toLowerCase()
                .replace(/[^a-z0-9\s-]/g, '');
        }

        function decodeHtmlEntities(text) {
            const textArea = document.createElement('textarea');
            textArea.innerHTML = text;
            return textArea.value;
        }

        function getFileList() {
            log("Încercare de obținere a listei de fișiere...");
            fetch('file_list.json')
                .then(response => response.json())
                .then(fileNames => {
                    log(`Fișiere găsite: ${fileNames.join(', ')}`);
                    loadArticles(fileNames);
                })
                .catch(error => {
                    log(`Eroare la obținerea listei de fișiere: ${error}`);
                });
        }

        function loadArticles(fileNames) {
            let filesLoaded = 0;
            articles = [];

            fileNames.forEach((fileName) => {
                fetch(fileName)
                    .then(response => response.text())
                    .then(text => {
                        const items = text.split('--------');
                        items.forEach((item) => {
                            if (item.trim() !== '') {
                                articles.push({ content: item.trim() });
                            }
                        });

                        log(`Fișier încărcat: ${fileName}, articole: ${items.length}`);

                        filesLoaded++;
                        if (filesLoaded === fileNames.length) {
                            log(`Încărcate ${articles.length} articole din ${fileNames.length} fișiere.`);
                        }
                    })
                    .catch(error => {
                        log(`Eroare la încărcarea fișierului ${fileName}: ${error}`);
                    });
            });
        }

        function highlightText(text, query) {
            const normalizedText = normalizeText(text);
            const normalizedQuery = normalizeText(query);
            
            const startIndex = normalizedText.indexOf(normalizedQuery);
            if (startIndex === -1) return text;

            const endIndex = startIndex + normalizedQuery.length;
            const beforeMatch = text.slice(0, startIndex);
            const match = text.slice(startIndex, endIndex);
            const afterMatch = text.slice(endIndex);

            return beforeMatch + '<span class="highlight">' + match + '</span>' + afterMatch;
        }

        function search() {
            const query = document.getElementById('searchInput').value.trim();
            const resultsDiv = document.getElementById('results');
            resultsDiv.innerHTML = '';
            debugInfo = [];

            log(`Căutare pentru: "${query}"`);
            let foundResults = 0;

            articles.forEach((article, index) => {
                if (normalizeText(article.content).includes(normalizeText(query))) {
                    foundResults++;
                    const highlightedContent = highlightText(article.content, query);

                    const div = document.createElement('div');
                    div.className = 'result';
                    div.innerHTML = highlightedContent;
                    resultsDiv.appendChild(div);

                    log(`Găsit în articolul ${index + 1}`);
                }
            });

            log(`Rezultate găsite: ${foundResults}`);
            if (foundResults === 0) {
                resultsDiv.innerHTML = '<p>Nu s-au găsit rezultate.</p>';
            }
        }

        window.onload = getFileList;
    </script>
</body>
</html>
